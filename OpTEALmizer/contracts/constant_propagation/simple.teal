#pragma version 8

int 2  // [2]
int 1  // [2, 1]
+      // [3]
int 1  // [3, 1]
int 1  // [3, 1, 1]
int 1  // [3, 1, 1, 1]
int 1  // [3, 1, 1, 1, 1]
+      // [3, 1, 1, 2]
+      // [3, 1, 3]
+      // [3, 4]
+      // [7]
dup    // [7, 7]
dup    // [7, 7, 7]
int 5  // [7, 7, 7, 5]
-      // [7, 7, 2]
*      // [7, 14]
int 1  // [7, 14, 1]
+      // [7, 15]
int 3  // [7, 15, 3]
/      // [7, 5]
dup    // [7, 5, 5]
+      // [7, 10]
dup    // [7, 10, 10]
dup    // [7, 10, 10, 10]
*      // [7, 10, 100]
dup    // [7, 10, 100, 100]
dig 2  // [7, 10, 100, 100, 10]
*      // [7, 10, 100, 1000]
swap   // [7, 10, 1000, 100]
dup    // [7, 10, 1000, 100, 100]
dup    // [7, 10, 1000, 100, 100, 100]
+      // [7, 10, 1000, 100, 200]
dup    // [7, 10, 1000, 100, 200, 200]
+      // [7, 10, 1000, 100, 400]
swap   // [7, 10, 1000, 400, 100]
-      // [7, 10, 1000, 300]
+      // [7, 10, 1300]
swap   // [7, 1300, 10]
dig 2  // [7, 1300, 10, 7]
*      // [7, 1300, 70]
int 1  // [7, 1300, 70, 1]
shr    // [7, 1300, 35]
int 5  // [7, 1300, 35, 5]
-      // [7, 1300, 30]
+      // [7, 1330]
+      // [1337]
return